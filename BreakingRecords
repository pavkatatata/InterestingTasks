using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Result
{

    /*
     * Complete the 'breakingRecords' function below.
     *
     * The function is expected to return an INTEGER_ARRAY.
     * The function accepts INTEGER_ARRAY scores as parameter.
     */

    public static List<int> breakingRecords(List<int> scores)
    {
        int highScore = scores[0];
        int minScore = scores[0];


        int breakHighScore = 0;
        int breakLowScore = 0;

        for (int i = 0; i < scores.Count; i++)
        {
            int currentScore = scores[i];

            if (highScore < currentScore)
            {
                breakHighScore++;
                highScore = currentScore;
            }
            if (minScore > currentScore)
            {
                breakLowScore++;
                minScore = currentScore;
            }

        }


        List<int> result = new List<int> { breakHighScore, breakLowScore };

        return result;


    }

}

class Solution
{
    public static void Main(string[] args)
    {
        

        int n = Convert.ToInt32(Console.ReadLine().Trim());

        List<int> scores = Console.ReadLine().TrimEnd().Split(' ').ToList().Select(scoresTemp => Convert.ToInt32(scoresTemp)).ToList();

        List<int> result = Result.breakingRecords(scores);

        Console.WriteLine(String.Join(" ", result));

        
    }
}
