using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Result
{

    /*
     * Complete the 'diagonalDifference' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts 2D_INTEGER_ARRAY arr as parameter.
     */

    public static int diagonalDifference(List<List<int>> arr)
    {
        int allSum = 0;
        int sum1 = 0;
        int sum2 = 0;
        for (int i = 0; i < arr.Count; i++)  // i = row
        {
            for (int j = 0; j < arr.Count; j++)   // j = colum
            {
                if (i == j)
                {
                    sum1 += arr[i][j];

                }
                
            }
        }

        
        for (int i = 0; i < arr.Count; i++)  // i = row
        {
            int y = arr.Count - 1 - i;

            if (y < 0)
            {
                break;

            }

            sum2 += arr[i][y];
        }
        return allSum = Math.Abs(sum1 - sum2);
    }

}

class Solution
{
    public static void Main(string[] args)
    {


        int n = Convert.ToInt32(Console.ReadLine().Trim());

        List<List<int>> arr = new List<List<int>>();

        for (int i = 0; i < n; i++)
        {
            arr.Add(Console.ReadLine().TrimEnd().Split(' ').ToList().Select(arrTemp => Convert.ToInt32(arrTemp)).ToList());
        }

        int result = Result.diagonalDifference(arr);

        Console.WriteLine(result);


    }
}
